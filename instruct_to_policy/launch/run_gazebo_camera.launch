<?xml version="1.0"?>
<!-- Copied and modified from franka_gazebo/launch/panda.launch -->

<launch>

  <!-- Environment variables for loading local artifacts -->
  <env name="GAZEBO_MODEL_PATH" value="$(find instruct_to_policy)/data/ycb/models:$(find instruct_to_policy)/data/google_scanned_object/models:$(find instruct_to_policy)/models:$(optenv GAZEBO_MODEL_PATH)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find instruct_to_policy)/worlds:$(optenv GAZEBO_RESOURCE_PATH)"/>
  <env name="LD_LIBRARY_PATH" value="$(find instruct_to_policy)/../../../devel/lib:$(optenv LD_LIBRARY_PATH)"/>

  <!-- Gazebo & GUI Configuration -->
  <arg name="gazebo"      default="true"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="world"       default="worlds/empty.world" doc="Filename to a SDF World for gazebo to use" />
  <arg name="rviz"        default="false" doc="Should RVIz be launched?" />
  <arg name="verbose"     default="false" doc="Should gazebo be started in verbose mode?" />
  <!-- Camera options -->
  <arg name="camera_model" default="$(find instruct_to_policy)/urdf/triple_d435_cameras.urdf.xacro" doc="Filename to a urdf.xacro file for gazebo to use" />
  <arg name="align_depth_to_rgb" default="true" />
  <arg name="publish_pointcloud" default="false" />

  <!-- Launch Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <include file="$(find instruct_to_policy)/launch/gazebo_spawn_camera.launch">
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="align_depth_to_rgb" value="$(arg align_depth_to_rgb)"/>
    <arg name="publish_pointcloud" value="$(arg publish_pointcloud)"/>
  </include>

</launch>
